name: Go
on:
  push:
    branches:
      - main

env:
  APP_NAME: 'ghosty_link'
  GO_VERSION: 1.23

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{env.GO_VERSION}}

      - name: Display go version
        run: go version

      - name: Build
        run: make build

      - name: Display built file
        run: ls ./bin

      - name: upload bin artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'bin_app'
          path: 'bin/ghosty_link'

  build-image:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: create bin dir
        run: mkdir bin

      - name: download bin artifact
        uses: actions/download-artifact@v4
        with:
          name: 'bin_app'
          path: ./bin

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Display built file
        run: ls ./bin

      - name: build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest,${{ vars.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:${{ github.sha }}
          build-args: |
            BUILD_VERSION=${{ github.sha }}

  deploy:
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Deploy to VPS
        run: |
          scp docker-compose.yml ${{ vars.VPS_USER }}@${{ vars.VPS_IP }}:/home/adanil/ghosty_link/docker-compose.yml
          ssh ${{ vars.VPS_USER }}@${{ vars.VPS_IP }} "cd /home/adanil/ghosty_link && docker compose pull && CRYPTO_KEY=${{ secrets.CRYPTO_KEY }} docker compose up -d"